---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import Background from '~/components/ui/Background.astro';

import HeroImagen from '~/assets/images/astronauta.webp';


import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  subsubtitle = await Astro.slots.render('subsubtitle'),

  tagline,

  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),

  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class="relative md:-mt-[76px] not-prose" {...id ? { id } : {}}>
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="py-12 md:py-20 lg:py-0 lg:flex lg:items-center lg:h-screen lg:gap-8">
      <div class="basis-1/2 text-center lg:text-left pb-10 md:pb-16 mx-auto">
        {
          tagline && (
            <p
              class="text-base text-secondary gradient-text-subtitle4 dark:text-blue-200 font-bold tracking-wide uppercase"
              set:html={tagline}
            />
          )
        }
        {
          title && (
            <h1
              class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading gradient-text"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl mx-auto lg:max-w-none">
          {subtitle && <p class="hidden sm:block text-xl text-muted mb-6 gradient-text-subtitle3 dark:text-slate-300" set:html={subtitle} />}
          {subsubtitle && <p class="hidden sm:block text-xl text-muted mb-6 gradient-text-subtitle3 dark:text-slate-300" set:html={subsubtitle} />}
          {
            actions && (
              <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 lg:justify-start lg:m-0 lg:max-w-7xl entry-effect-2">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          }
          <div class="pb-30 sm:pb-0 max-w-xs sm:max-w-md m-auto flex flex-nowrap sm:flex-row sm:justify-center gap-4 lg:justify-start lg:m-0 lg:max-w-7xl">
            <slot name="boton"></slot>
          </div>
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div class="basis-1/2">
        <div class="absolute m-auto w-1/2 astronaut top-50 sm:top-20"  id="astronauti">
<!-- Suggested code may be subject to a license. Learn more: ~LicenseLog:3813588325. -->
          <img src={HeroImagen.src} crossorigin="anonymous" referrerpolicy="no-referrer" style="object-fit: contain; object-position: center; max-width: 900px; max-height: 9
          00px; aspect-ratio: 1.0333333333333334; width: 100%;" />
        </div>
        
      </div>
    </div>
  </div>
</section>


<style>
  @keyframes float {
    0% {
      transform: translate3d(0, 0, 0);
    }

    10% {
      transform: translate3d(50px, -50px, 0); /* Mover ligeramente a la derecha y arriba */
    }

    20% {
      transform: translate3d(100px, 30px, 0); /* Mover más a la derecha y hacia abajo */
    }

    30% {
      transform: translate3d(-30px, 80px, 0); /* Mover hacia la izquierda y más abajo */
    }

    40% {
      transform: translate3d(-80px, -40px, 0); /* Mover hacia la izquierda y hacia arriba */
    }

    50% {
      transform: translate3d(60px, -100px, 0); /* Mover hacia la derecha y arriba */
    }

    60% {
      transform: translate3d(120px, 40px, 0); /* Mover más a la derecha y ligeramente abajo */
    }

    70% {
      transform: translate3d(-60px, 100px, 0); /* Mover hacia la izquierda y abajo */
    }

    80% {
      transform: translate3d(-100px, -20px, 0); /* Mover hacia la izquierda y ligeramente arriba */
    }

    90% {
      transform: translate3d(40px, -80px, 0); /* Mover hacia la derecha y arriba */
    }

    100% {
      transform: translate3d(0, 0, 0); /* Volver a la posición original */
    }
  }

  #astronauti {
    animation: float linear 25s infinite alternate; /* Animación de 7 segundos con movimientos alternados */
  }

  @media (prefers-reduced-motion: reduce) {
    #astronauti {
      @apply animate-none;
    }

    :global(#starfield) {
      @apply hidden;
    }

    #splash-bg-fallback {
      @apply block;
    }
  }
</style>
