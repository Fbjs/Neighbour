---
import '~/assets/styles/tailwind.css';

import { I18N } from 'astrowind:config';

import CommonMeta from '~/components/common/CommonMeta.astro';
import Favicons from '~/components/Favicons.astro';
import CustomStyles from '~/components/CustomStyles.astro';
import ApplyColorMode from '~/components/common/ApplyColorMode.astro';
import Metadata from '~/components/common/Metadata.astro';
import SiteVerification from '~/components/common/SiteVerification.astro';
import Analytics from '~/components/common/Analytics.astro';
import BasicScripts from '~/components/common/BasicScripts.astro';
import ContactUs from '~/components/widgets/ContactForm.astro';

// Comment the line below to disable View Transitions
import { ViewTransitions } from 'astro:transitions';

import type { MetaData as MetaDataType } from '~/types';

export interface Props {
  metadata?: MetaDataType;
}

const { metadata = {} } = Astro.props;
const { language, textDirection } = I18N;




---

<!doctype html>
<html lang={language} dir={textDirection} class="2xl:text-[20px]">
  <head>
    <CommonMeta />
    <Favicons />
    <CustomStyles />
    <ApplyColorMode />
    <Metadata {...metadata} />
    <SiteVerification />
    <Analytics />

    <!-- Comment the line below to disable View Transitions -->
    <!--ViewTransitions fallback="swap" />
    <script src="//unpkg.com/alpinejs" defer></script-->

  </head>

  <body class="antialiased text-default bg-page tracking-tight">
    <slot />
    <ContactUs
        inputs={[
          {
            type: 'text',
            name: 'name',
            label: 'Nombre',
            placeholder: 'Tu Nombre',
          },
          {
            type: 'email',
            name: 'mail',
            label: 'Correo',
            placeholder: 'Tu Email',
          },
        ]}
        textarea={{
          label: 'Mensaje',
          placeholder: 'Tu Mensaje'
        }}
        description="Nuestro equipo te responderá en menos de 24hrs."
      />

    <BasicScripts />

    <style is:global>
      img {
        content-visibility: auto;
      }
    </style>
  </body>
</html>


<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger) 

  // ------------------------- Slider -------------------------
  gsap.fromTo('.entry-effect-1',
    {
      opacity: 0,
      scale: 0.5,  // Comienza más pequeño
      transformOrigin: 'center center', // Escala desde el centro
    },
    {
      opacity: 1,
      scale: 1,    // Crece hasta el tamaño normal
      duration: 3,
      ease: 'back.out(2)',  // Efecto de rebote al final
      delay: 0,     // Sin retraso
      stagger: 0    // Sin retraso entre elementos
    }
  );

// Animación para ambos botones al mismo tiempo
gsap.fromTo(['.btn-slider-1', '.btn-slider-2'],
  {
    opacity: 0,  // Comienzan invisibles
    scale: 0.5,  // Comienzan más pequeños
  },
  {
    opacity: 1,  // Se hacen visibles
    scale: 1,    // Vuelven a su tamaño normal
    duration: 0.8, // Duración rápida
    ease: 'power2.out',  // Animación suave
    delay: 0  // Sin retraso
  }
);

  // ------------------------- Slider -------------------------


  // ------------------------- Features  -------------------------
  const tl = gsap.timeline({
  scrollTrigger: {
    trigger: '.subtitle', // Se dispara con el subtítulo
    start: 'top 50%',      // Inicia cuando el subtítulo apenas entra en el viewport
    end: 'top 40%',        // Termina más rápido para que no haya tanto scroll
    scrub: 2,              // Suaviza un poco, pero hace la animación más rápida
    markers: false,         // Para visualizar (puedes quitarlo)
    toggleActions: 'play none none reverse'
  }
});

// Animación del subtítulo (subtittle)
tl.fromTo('.tag', 
  { opacity: 0, y: -100 },  // Inicia más arriba y con opacidad 0 (puedes reducir el desplazamiento)
  { 
    opacity: 1,   // Se hace visible
    y: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación más rápida
  }
);

// Animación del título (tittle) después del subtítulo
tl.fromTo('.title', 
  { opacity: 0, y: -100 },  // Inicia más arriba y con opacidad 0
  { 
    opacity: 1,   // Se hace visible
    y: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación más rápida
  }, 
  '+=0.2'         // Retraso pequeño para separar las animaciones
);

// Animación del tag después del título
tl.fromTo('.subtitle', 
  { opacity: 0, y: -100 },  // Inicia más arriba y con opacidad 0
  { 
    opacity: 1,   // Se hace visible
    y: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación más rápida
  }, 
  '+=0.2'         // Retraso pequeño para separar las animaciones
);

// Timeline para ScrollTrigger desde la izquierda
const tlIzquierda = gsap.timeline({
  scrollTrigger: {
    trigger: '.elemento-izquierda',
    start: 'top 45%',
    end: 'top 30%',
    scrub: 2,
    markers: false,   // Puedes habilitar si necesitas visualizar los puntos de inicio y fin
    toggleActions: 'play none none reverse'
  }
});

tlIzquierda.from('.elemento-izquierda', {
  x: -200,  // Se mueve desde la izquierda
  opacity: 0,
  duration: 1,
  ease: 'power3.out'
});

// Timeline para ScrollTrigger desde la derecha
const tlDerecha = gsap.timeline({
  scrollTrigger: {
    trigger: '.elemento-derecha',
    start: 'top 45%',
    end: 'top 30%',
    scrub: 2,
    markers: false,   // Puedes habilitar si necesitas visualizar los puntos de inicio y fin
    toggleActions: 'play none none reverse'
  }
});

tlDerecha.from('.elemento-derecha', {
  x: 200,  // Se mueve desde la derecha
  opacity: 0,
  duration: 1,
  ease: 'power3.out'
});

  // ------------------------- Features -------------------------
  
  // ------------------------- Features2 -------------------------
  const f2Timeline = gsap.timeline({
  scrollTrigger: {
    trigger: '.f2-mid',      // Se dispara con el elemento f2-mid
    start: 'top 50%',        // Inicia cuando f2-mid apenas entra en el viewport
    end: 'top 40%',          // Termina más rápido para que no haya tanto scroll
    scrub: 2,                // Suaviza un poco, pero hace la animación más rápida
    markers: false,          // Para visualizar (puedes quitarlo)
    toggleActions: 'play none none reverse'
  }
});

// Animación del f2-izq entrando desde la izquierda
f2Timeline.fromTo('.f2-izq', 
  { opacity: 0, x: -100 },  // Inicia desde la izquierda con opacidad 0
  { 
    opacity: 1,   // Se hace visible
    x: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación
  }
);

// Animación del f2-headline (título) después del f2-izq
f2Timeline.fromTo('.f2-headline', 
  { opacity: 0, y: -100 },  // Inicia desde arriba con opacidad 0
  { 
    opacity: 1,   // Se hace visible
    y: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación más rápida
  }, 
  '+=0.2'         // Retraso pequeño para separar las animaciones
);

// Animación del f2-mid entrando desde abajo
f2Timeline.fromTo('.f2-mid', 
  { opacity: 0, y: 100 },  // Inicia desde abajo con opacidad 0
  { 
    opacity: 1,   // Se hace visible
    y: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación
  }, 
  '+=0.2'         // Retraso pequeño para separar las animaciones
);

// Animación del f2-der entrando desde la derecha
f2Timeline.fromTo('.f2-der', 
  { opacity: 0, x: 100 },  // Inicia desde la derecha con opacidad 0
  { 
    opacity: 1,   // Se hace visible
    x: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación
  }, 
  '+=0.2'         // Retraso pequeño para que entre al final de todo
);


// ------------------------- Features2 -------------------------

// ------------------------- Stats -------------------------
gsap.from(".stat", {
  scrollTrigger: {
    trigger: ".stat",
    start: "top 50%", // Cuando el top del trigger llega al top del viewport
    end: "bottom 50%", // Hasta el bottom del trigger llega al 50% del viewport
    scrub: 2, // Hace que la animación se sincronice con el scroll
    markers: false,
    toggleActions: 'play none none reverse'
  },
  y: -100, // Desplazamiento inicial desde arriba
  opacity: 0, // Comienza invisible
  duration: 1, // Duración del efecto
  ease: "power3.out", // Tipo de suavizado
});
// ------------------------- Stats -------------------------

// ------------------------- Brands -------------------------
gsap.from(".brand-title", {
  scrollTrigger: {
    trigger: '.brand-title', // Se dispara con el subtítulo
    start: 'top 50%',      // Inicia cuando el subtítulo apenas entra en el viewport
    end: 'top 40%',        // Termina más rápido para que no haya tanto scroll
    scrub: 2,              // Suaviza un poco, pero hace la animación más rápida
    markers: false,         // Para visualizar (puedes quitarlo)
    toggleActions: 'play none none reverse'
  },
  y: -100, // Desplazamiento inicial desde arriba
  opacity: 0, // Comienza invisible
  duration: 2, // Duración del efecto
  ease: "power3.out", // Tipo de suavizado
});

gsap.from(".brand-subtitle", {
  scrollTrigger: {
    trigger: '.brand-subtitle',
    start: 'top 50%',  
    end: 'top 40%',    
    scrub: 2,
    toggleActions: 'play none none reverse'
  },
  y: -100, // Similar desplazamiento desde arriba
  opacity: 0, // Comienza invisible
  duration: 2, // Duración del efecto
  ease: "power3.out", // Tipo de suavizado
  delay: 0.5 // Retraso para que aparezca después de .brand-title
});

// ------------------------- Brands -------------------------


// ------------------------- CallToAction -------------------------
const hlTimeline = gsap.timeline({
  scrollTrigger: {
    trigger: '.hl-subtitle', // Se dispara con el subtítulo
    start: 'top 50%',        // Inicia cuando el subtítulo apenas entra en el viewport
    end: 'top 40%',          // Termina más rápido para que no haya tanto scroll
    scrub: 2,                // Suaviza un poco, pero hace la animación más rápida
    markers: false,          // Para visualizar (puedes quitarlo)
    toggleActions: 'play none none reverse'
  }
});

// Animación del subtítulo (hl-tag)
hlTimeline.fromTo('.hl-tag', 
  { opacity: 0, y: -100 },  // Inicia más arriba y con opacidad 0 (puedes reducir el desplazamiento)
  { 
    opacity: 1,   // Se hace visible
    y: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación más rápida
  }
);

// Animación del título (hl-title) después del subtítulo
hlTimeline.fromTo('.hl-title', 
  { opacity: 0, y: -100 },  // Inicia más arriba y con opacidad 0
  { 
    opacity: 1,   // Se hace visible
    y: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación más rápida
  }, 
  '+=0.2'         // Retraso pequeño para separar las animaciones
);

// Animación del subtítulo (hl-subtitle) después del título
hlTimeline.fromTo('.hl-subtitle', 
  { opacity: 0, y: -100 },  // Inicia más arriba y con opacidad 0
  { 
    opacity: 1,   // Se hace visible
    y: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación más rápida
  }, 
  '+=0.2'         // Retraso pequeño para separar las animaciones
);

hlTimeline.fromTo('.hl-btn', 
  { opacity: 0, y: -100 },  // Inicia más arriba y con opacidad 0
  { 
    opacity: 1,   // Se hace visible
    y: 0,         // Termina en su posición original
    duration: 2   // Duración de la animación
  }, 
  '+=0.2'         // Retraso pequeño para que entre al final de todo
);

// ------------------------- CallToAction -------------------------

</script>