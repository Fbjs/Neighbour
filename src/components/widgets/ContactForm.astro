---
import type { Form as Props } from '~/types';
import Button from '~/components/ui/Button.astro';

const { inputs, textarea, disclaimer, button = 'Enviar', description = '' , asunto} = Astro.props;
---

<!-- BotÃ³n(es) que abren el modal -->
<Button variant="primary" class="open-modal-btn">
  Cotiza tu Proyecto
</Button>

<!-- Modal -->
<div id="contact-modal" class="hidden fixed z-50 inset-0 overflow-y-auto">
  <!-- Fondo oscuro semi-transparente -->
  <div class="fixed inset-0 transition-opacity bg-slate-900 bg-opacity-75"></div>

  <!-- Contenido del modal -->
  <div class="flex items-center justify-center min-h-screen">
    <div class="bg-white dark:bg-slate-900 rounded-lg overflow-hidden shadow-xl transform transition-all max-w-md w-full">
      <div class="px-6 py-4">
        <div class="text-center sm:text-left">
          <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white" id="modal-title">
            Formulario de Contacto
          </h3>
          <p class="mt-2 text-sm text-gray-500 dark:text-gray-300">
            Rellene el siguiente formulario para enviarnos un mensaje.
          </p>
        </div>

        <form action="https://api.web3forms.com/submit" method="POST" class="mt-4 text-left">
          <input type="hidden" name="access_key" value="be189844-e76c-45c7-b324-032897ee8890" />
          <input type="hidden" name="asunto" value={asunto} />

          {inputs &&
            inputs.map(({ type = 'text', name, label = '', autocomplete = 'on', placeholder = '' }) =>
              name && (
                <div class="mb-6">
                  {label && (
                    <label for={name} class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                      {label}
                    </label>
                  )}
                  <input
                    type={type}
                    name={name}
                    id={name}
                    autocomplete={autocomplete}
                    placeholder={placeholder}
                    class="py-3 px-4 block w-full text-md rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-slate-800 focus:outline-none focus:ring-2 focus:ring-indigo-500"
                    required
                  />
                </div>
              )
            )}

          {textarea && (
            <div class="mb-4">
              <label for="textarea" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                {textarea.label}
              </label>
              <textarea
                id="textarea"
                name={textarea.name || 'message'}
                rows={textarea.rows || 4}
                placeholder={textarea.placeholder}
                class="py-2 px-3 mt-1 block w-full text-md rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-slate-800 focus:outline-none focus:ring-2 focus:ring-indigo-500"
                required
              />
            </div>
          )}

          {disclaimer && (
            <div class="mt-3 flex items-start">
              <div class="flex mt-0.5">
                <input
                  id="disclaimer"
                  name="disclaimer"
                  type="checkbox"
                  class="cursor-pointer mt-1 py-3 px-4 block w-full text-md rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-slate-900"
                />
              </div>
              <div class="ml-3">
                <label for="disclaimer" class="cursor-pointer select-none text-sm text-gray-600 dark:text-gray-400">
                  {disclaimer.label}
                </label>
              </div>
            </div>
          )}

          <div class="flex items-center justify-end space-x-3">
            <Button variant="primary" type="submit">
              {button}
            </Button>
            <button
              type="button"
              class="close-modal-btn rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white dark:bg-slate-800 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-slate-700"
            >
              Cerrar
            </button>
          </div>

          {description && (
            <div class="mt-3 text-center">
              <p class="text-sm text-gray-600 dark:text-gray-400">{description}</p>
            </div>
          )}
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const openModalBtns = document.querySelectorAll('.open-modal-btn');
    const closeModalBtns = document.querySelectorAll('.close-modal-btn');
    const modal = document.getElementById('contact-modal');

    if (openModalBtns.length && closeModalBtns.length && modal) {
      openModalBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          modal.classList.remove('hidden');
        });
      });

      closeModalBtns.forEach(btn => {
        btn.addEventListener('click', () => {
          modal.classList.add('hidden');
        });
      });
    }
  });
</script>
